<style>
  .flex_center {
    display: flex;
    align-items: center;
  }
  .label_input_div {
    margin-left: 1px;
    display: flex;
    flex-wrap: wrap;
  }
  .label_field {
    flex: 0 0 30%;
    max-width: 30%;
  }
  .input_field {
    flex: 0 0 70%;
    max-width: 70%;
  }
  .divider {
    margin: 0 auto 10px auto;
    height: 1px;
    max-width: 50%;
    background-image: radial-gradient(#e4ebef,gray);
  }
  .small_margin_left {
    margin-left: 1px;
  }
  .warning_message {
    max-width: 40em;
  }
  .combined_creator {
    margin-bottom: 10px;
  }
  .creator_remove {
    color: #d9534f;
    #margin: 25px 0 0 -30px;
    text-decoration: underline;
  }
  .d_none {
    display: none;
  }
</style>

<script type="text/javascript" charset="utf-8">
  var creator_cnt = 0;
  var cur_creator_num = 0;

  function invalid_orcid() {
    let regex = /^\d{4}-\d{4}-\d{4}-\d{3}[\dX]$/;
    let has_invalid_orcid = false;
    $('.orcid_error').addClass('d_none').attr('aria-hidden', 'true');
    $('.creator_orcid').each(function () {
      let orcid_val = $.trim($(this).val());
      if (orcid_val != '' && !regex.test(orcid_val)) {
        let id = $(this).prop('id').substring(17);
        $('#orcid_error' + id).removeClass('d_none').attr('aria-hidden', 'false');
        has_invalid_orcid = true;
      }
    });
    return has_invalid_orcid;
  }

  function invalid_description() {
    /* will need to check to see if class has required in it if we have more
       than one textarea tinymce where one of them is not required but for now
       only one textarea tinymce description is rquired in the work except for collection.
       let class_str = $('#<%= model_type %>_description').prop('class'); or loop through
     $('.use_tinymce').each(function () {
       let class_str = $('#' + $(this).prop('class'));
       and check if it contains required string
     });
    */
    let desc_content = tinymce.get('<%= model_type %>_description').getContent();
    if (desc_content.length > 0) {
      $('#empty_description').addClass('d-none');
      $('#description_content').removeClass('has-error');
      return false;
    }
    $('#empty_description').removeClass('d-none');
    $('#description_content').addClass('has-error');
    return true;
  }

  function invalid_creator() {
    let invalid = true;
    $('.creator_name').each(function () {
      if ($.trim($(this).val()) != '') {
        invalid = false;
        return false;
      }
    })
    return invalid;
  }

  function any_empty_creator() {
    let retVal = false;
    $('.creator_name').each(function () {
      if ($.trim($(this).val()) == '') {
        retVal = true;
        return false;
      }
    })
    return retVal;
  }

  function toggle_submit(disabled) {
    if (disabled) {
      $('#required-metadata').removeClass('complete').addClass('incomplete');
    }
    else {
      $('#required-metadata').addClass('complete').removeClass('incomplete');
    }
    $('#with_files_submit').attr('disabled', disabled);
  }

  function generate_creator() {
      let elem =
          "<div id='creator_divider" + cur_creator_num + "' class='row divider creator_divider'></div>" +
          "<div id='creator" + cur_creator_num + "' class='row creator flex_center'>" +
          "  <div class='col-xs-6'>" +
          "    <div class='label_input_div'>" +
          "      <label for='creator_name" + cur_creator_num + "' class='label_field'>" +
          "        <span class='sr-only'>creator </span>Name" +
          "        <span class='label label-info required-tag'>required</span>" +
          "      </label>" +
          "        <input type='text' name='<%= model_type %>[creator][]' id='creator_name" + cur_creator_num + "' value='' aria-required='true' class='string multi_value required creator_name combined_creator multi-text-field multi_value input_field' />" +
          "    </div>" +
          "    <div class='label_input_div'>" +
          "      <input type='hidden' name='<%= model_type %>[creator_email][]' id='creator_email" + cur_creator_num + "' value='' />" +
          "      <label for='creator_email_tmp" + cur_creator_num + "' class='label_field'>" +
          "        <span class='sr-only'>creator </span>Email" +
          "      </label>" +
          "      <input type='email' name='<%= model_type %>[creator_email_tmp][]' id='creator_email_tmp" + cur_creator_num + "' value='' class='creator_email combined_creator multi-text-field multi_value input_field' />" +
          "    </div>" +
          "    <div class='label_input_div'>" +
          "      <input type='hidden' name='<%= model_type %>[creator_orcid][]' id='creator_orcid" + cur_creator_num + "' value='' />" +
          "      <label for='creator_orcid_tmp" + cur_creator_num + "' class='label_field'>" +
          "        <span class='sr-only'>creator </span>ORCID" +
          "      </label>" +
          "      <input type='text' name='<%= model_type %>[creator_orcid_tmp][]' id='creator_orcid_tmp" + cur_creator_num + "' value='' class='creator_orcid combined_creator multi-text-field multi_value input_field' />" +
          "      <span id='orcid_error" + cur_creator_num + "' class='orcid_error error text-danger error text-danger combined_creator d_none' role='alert' aria-hidden='true'>must be a string of 19 characters, e.g., '0000-0000-0000-0000'</span>" +
          "    </div>" +
          "    <div class='label_input_div'>" +
          "      <input type='hidden' name='<%= model_type %>[creator_institution][]' id='creator_institution" + cur_creator_num + "' value='' />" +
          "      <label for='creator_institution_tmp" + cur_creator_num + "' class='label_field'>" +
          "        <span class='sr-only'>creator </span>Institution" +
          "      </label>" +
          "      <input type='text' name='<%= model_type %>[creator_institution_tmp][]' id='creator_institution_tmp" + cur_creator_num + "' value='' class='creator_institution combined_creator multi-text-field multi_value input_field' />" +
          "    </div>" +
          "  </div>" +
          "  <div class='col-sm'>" +
          "    <button class='btn btn-link remove element_remove creator_remove' aria-hidden='true' " +
          "            type='button' data-element-class='creator' data-element-num='" + cur_creator_num + "'>" +
          "      <span class='glyphicon glyphicon-remove'></span>" +
          "      <span class='controls-remove-text'>Remove</span>" +
          "      <span class='sr-only'>creator</span>" +
          "    </button>" +
          "  </div>" +
          "</div>";
      return elem;
  }

  function post_add_creator() {
      $('.creator_name').on('change', creator_name_change);
      $('.creator_orcid').on('focusout', invalid_orcid);    // comment this to test server ORCID validation
      creator_cnt++;
      cur_creator_num++;
      //console.log('in post_add_creator creator_cnt ' + creator_cnt);
  }

  // function to execute after remove to do any adjustment not just the count
  function post_remove_creator() {
      creator_cnt--;
      toggle_submit(invalid_creator());
  }

  function element_add() {
      let elem_class = $(this).data('element-class');
      //console.log('elem_add class ' + elem_class);

      // let's turn off the warning message first
      $('#' + elem_class + '_warning').addClass('d_none').attr('aria-hidden', 'true');

      let any_empty_element = false;
      try {
          any_empty_element = eval('any_empty_' + elem_class + '()');
      }
      catch(err) {
          console.log('error eval any empty func');
      }

      if (any_empty_element) {
          // turn on warning message when we already have empty field
          $('#' + elem_class + '_warning').removeClass('d_none').attr('aria-hidden', 'false');
      }
      else {
          $('.' + elem_class + '_remove').removeClass('d_none').attr('aria-hidden', 'false');
          let elem_parent =  $('#' + elem_class + '_divs');
          let new_elem = null;
          try {
              new_elem = eval('generate_' + elem_class + '()');
          }
          catch(err) {
              console.log('fail to find func');
          }
          if (elem_parent.length && new_elem != null) {
              elem_parent.append(new_elem);
              $('.element_remove').on('click', element_remove);
              try {
                  eval('post_add_' + elem_class + '()');
              }
              catch(err) {
                  console.log('fail to find post add');
              }
          }
      }
  }

  function element_remove() {
      let elem_class = $(this).data('element-class');
      let elem_num = $(this).data('element-num');
      //console.log('element_remove class ' + elem_class + ' num ' + elem_num);

      let elem_cnt = null;
      try {
          elem_cnt = eval(elem_class + '_cnt');
          //console.log('element_remove elem_cnt ' + elem_cnt);
          if (elem_cnt > 1) {
              let removing_elem = $('#' + elem_class + elem_num);
              if (removing_elem.length) {
                  removing_elem.remove();
                  try {
                      eval('post_remove_' + elem_class + '()');
                  } catch (err) {
                      console.log('failed to call decrement count');
                  }
                  elem_cnt = eval(elem_class + '_cnt');
                  //console.log('element_remove elem_cnt after decrement ' + elem_cnt);
                  if (elem_cnt == 1) {
                      $('.' + elem_class + '_divider').remove();
                      $('.' + elem_class + '_remove').addClass('d_none').attr('aria-hidden', 'true');
                  }
                  else {
                      if ($('#' + elem_class + '_divider' + elem_num).length) {
                          $('#' + elem_class + '_divider' + elem_num).remove();
                      }
                  }
                  $('#' + elem_class + '_warning').addClass('d_none').attr('aria-hidden', 'true');
              }
          }
      }
      catch(err) {
          console.log('fail to eval elem count');
      }
  }

  function save_handler(event) {
    // comment this to test server ORCID validation by remove the condition invalid_orcid
    if (invalid_orcid() || invalid_description()) {
      event.preventDefault();
      toggle_submit(true);
      return;
    }

    if (typeof invalid_date_issued === 'function') {
        if (invalid_date_issued()) {
          event.preventDefault();
          toggle_submit(true);
          return;
        }
    }

    $('.creator_name').each(function () {
      if ($.trim($(this).val()) == '') {
        $('#creator_div' + $(this).prop('id').substring(12)).remove();
        creator_cnt--;
      }
    })

    $('.creator_email').each(function () {
      let value = $.trim($(this).val());
      if (value == '') {
        //console.log('found an empty ' + $(this).prop('id'));
        value = '|||';
      }
      let email = $('#creator_email' + $(this).prop('id').substring(17));
      if (email.length) {
        email.val(value);
      }
    })
    $('.creator_orcid').each(function (i) {
      let value = $.trim($(this).val());
      if (value == '') {
        //console.log('found an empty ' + $(this).prop('id'));
        value = '|||';
      }
      let orcid = $('#creator_orcid' + $(this).prop('id').substring(17));
      if (orcid.length) {
        orcid.val(value);
      }
    })
    $('.creator_institution').each(function (i) {
      let value = $.trim($(this).val());
      if (value == '') {
        //console.log('found an empty ' + $(this).prop('id'));
        value = '|||';
      }
      let institution = $('#creator_institution' + $(this).prop('id').substring(23));
      if (institution.length) {
        institution.val(value);
      }
    })
    $('.date_issued_div').each(function () {
       let index = $(this).prop('id').substring($(this).prop('id').lastIndexOf('_') + 1);
       let date_issued_str = $('#date_issued_year_' + index).val();
       let month = $('#date_issued_month_' + index).val();
       let day = $('#date_issued_day_' + index).val();
       if (month != '' && day != '') {
           if (Number(month) < 10) {
               month = '0' + month;
           }
           if (Number(day) < 10) {
               day = '0' + day;
           }
           date_issued_str = date_issued_str + '-' + month + '-' + day;
       }
       $('#date_issued_' + index).val(date_issued_str);
    })

    $('.discipline_hidden').each(function () {
        let discipline_val = '';
        let list = $(this).nextAll();
        if (list !== undefined) {
            let div_select = $(list[list.length - 1]).last();
            discipline_val = div_select.find('select').val();
            if (discipline_val == '' && list.length > 1) {
                discipline_val = $(list[list.length - 2]).find('select').val();
            }
        }
        $(this).val(discipline_val);
    });

  }

  function creator_name_change() {
    toggle_submit(invalid_creator());
  }

  $(function() {
    $('#creator_content').addClass('<%= model_type %>_creator');
    $('.creator').each(function () {
      creator_cnt++;
    })
    cur_creator_num = creator_cnt;
    console.log('initialization: creator num ' + cur_creator_num);
    if (creator_cnt == 1) {
      $('.creator_remove').addClass('d_none').attr('aria-hidden', 'true');
    }

    /* no need to add event handler here since we are going to do it in discipline
      otherwise it will invoke handler twice per click
    $('.element_add').on('click', element_add);
    $('.element_remove').on('click', element_remove);
     */

    // comment this to test server ORCID validation
    $('.creator_orcid').on('focusout', invalid_orcid);

    //$('#with_files_submit').submit(function (e) {
    $('#with_files_submit').click(function (e) {
      save_handler(e);
    });

    // extra validation to catch backend validation for empty author
    if ($('div.alert.alert-danger.alert-dismissable').length) {
      if (invalid_creator()) {
        $('#empty_author').removeClass('d-none');
        $('#creator_content').addClass('has-error');
      }
      if (invalid_orcid()) {
        $('#creator_content').addClass('has-error');
      }
    }

  });
</script>

<div id="creator_content" class="form-group multi_value required managed">
  <% creator_email = f.object.creator_email %>
  <% creator_orcid = f.object.creator_orcid %>
  <% creator_institution = f.object.creator_institution %>
  <span id="creator_email_label" class="sr-only">creator email</span>

  <label id="creator_label" class="control-label"><%= t('simple_form.labels.defaults.creator') %> <span class="label label-info required-tag">required</span></label>
  <span id="empty_author" class="help-block d_none">Your work must have a creator.</span>

  <p class="help-block"><%= t('simple_form.hints.defaults.creator') %></p>

  <div id="creator_divs" aria-live="polite">
    <% f.object.creator.each_with_index do |creator_name, index| %>
      <% if index > 0 %>
        <% divider_id = "creator_divider#{index}" %>
        <div id=<%= divider_id %> class="row divider creator_divider"></div>
      <% end %>
      <% div_id = "creator#{index}" %>
      <div id=<%= div_id %> class="row creator flex_center">
        <div class="col-xs-6">
          <div class="label_input_div">
            <label for=<%= "creator_name#{index}" %> class="label_field">
              <span class="sr-only">creator </span>
              Name
              <span class="label label-info required-tag">required</span>
              </span>
            </label>
            <%= text_field_tag "#{model_type}[creator][]", creator_name,
                                id: "creator_name#{index}",
                                :required => true,
                                class: "string multi_value required creator_name combined_creator multi-text-field multi_value input_field",
                                'aria-required' => true
            %>
          </div>
          <div class="label_input_div">
            <%= hidden_field_tag "#{model_type}[creator_email][]", creator_email[index], id: "creator_email#{index}" %>
            <label for=<%= "creator_email_tmp#{index}" %> class="label_field">
              <span class="sr-only">creator </span>
               Email
              </span>
            </label>
            <%= email_field_tag "#{model_type}[creator_email_tmp][]", creator_email[index],
                                id: "creator_email_tmp#{index}",
                                class: "creator_email combined_creator multi-text-field multi_value input_field"
            %>
          </div>
          <div class="label_input_div">
            <%= hidden_field_tag "#{model_type}[creator_institution][]", creator_institution[index], id: "creator_institution#{index}" %>
            <label for=<%= "creator_institution_tmp#{index}" %> class="label_field">
              <span class="sr-only">creator </span>
              Institution
              </span>
            </label>
            <%= text_field_tag "#{model_type}[creator_institution_tmp][]", creator_institution[index],
                               id: "creator_institution_tmp#{index}",
                               class: "creator_institution combined_creator multi-text-field multi_value input_field"
            %>
          </div>
          <div class="label_input_div">
            <%= hidden_field_tag "#{model_type}[creator_orcid][]", creator_orcid[index], id: "creator_orcid#{index}" %>
            <label for=<%= "creator_orcid_tmp#{index}" %> class="label_field">
              <span class="sr-only">creator </span>
              ORCID
              </span>
            </label>
            <%= text_field_tag "#{model_type}[creator_orcid_tmp][]", creator_orcid[index],
                               id: "creator_orcid_tmp#{index}",
                               class: "creator_orcid combined_creator multi-text-field multi_value input_field"
            %>
            <span id=<%= "orcid_error#{index}" %> class="orcid_error error text-danger combined_creator d_none" role="alert" aria-hidden="true">
            must be a string of 19 characters, e.g., '0000-0000-0000-0000'
            </span>
          </div>
        </div>
        <div class="col-sm">
            <button class="btn btn-link remove element_remove creator_remove" aria-hidden="true" type="button" data-element-class="creator" data-element-num=<%= "#{index}" %>>
              <span class="glyphicon glyphicon-remove"></span>
              <span class="controls-remove-text">Remove</span>
              <span class="sr-only">creator <%=creator_name%> </span>
            </button>
        </div>

      </div>
    <% end %>
  </div>
  <div class="form-group multi_value">
    <div id="creator_warning" class="row small_margin_left message has-warning warning_message d_none" aria-hidden="true">
      cannot add another with empty field
    </div>
    <div class="small_margin_left">
      <button type="button" class="btn btn-link add element_add" data-element-class="creator">
        <span class="glyphicon glyphicon-plus"></span>
        <span class="controls-add-text">Add another Creator</span>
      </button>
    </div>
  </div>
</div>
